"use strict";(self.webpackChunkjavascript_framework_shop=self.webpackChunkjavascript_framework_shop||[]).push([[526],{399:(t,e,a)=>{a.a(t,(async(t,i)=>{try{a.d(e,{Z:()=>p});var s=a(771),n=a(319),l=a(531),r=a(598),c=a(838),o=a(338),_=a(811),d=t([n]);n=(d.then?(await d)():d)[0];class p extends s.Z{_data={};constructor(){super(),this._init()}async _beforeInit(){await this._loadData(),await this._updateData()}async _loadData(){this._data.products=n.Z.getState("products"),n.Z.subscribe(c.xe,(()=>{this._toggle("complex"),this._toggle("rooms"),this._toggle("square"),this._toggle("priceSqM"),this._toggle("priceTotal")}))}async _updateData(){const{products:t}=this._data;this._elements.content.append(...this._list(t))}get _template(){return'\n      <div class="card-table">\n        <header class="card-table__row card-table__filter" data-el="filter">\n          <button class="card-table__col card-table__toggle" type="button" tabindex="-1"><span>Артикул</span></button>\n          <button class="card-table__col card-table__toggle card-table__toggle--desc" type="button" data-el="complex"><span>ЖК</span></button>\n          <button class="card-table__col card-table__toggle" type="button" tabindex="-1"><span>Корпус</span></button>\n          <button class="card-table__col card-table__toggle" type="button" tabindex="-1"><span>Этаж</span></button>\n          <button class="card-table__col card-table__toggle card-table__toggle--desc" type="button" data-el="rooms"><span>Комнат</span></button>\n          <button class="card-table__col card-table__toggle card-table__toggle--desc" type="button" data-el="square"><span>Площадь</span></button>\n          <button class="card-table__col card-table__toggle card-table__toggle--desc" type="button" data-el="priceSqM"><span>м<sup>2</sup></span></button>\n          <button class="card-table__col card-table__toggle card-table__toggle--desc" type="button" data-el="priceTotal"><span>Стоимость</span></button>\n          <button class="card-table__col card-table__toggle" type="button" tabindex="-1"><span>Избранное</span></button>\n        </header>\n        <div class="card-table__content" data-el="content"></div>\n      </div>\n    '}_list(t={}){return t.map((t=>{const{id:e,scu:a,complexName:i,square:s,priceSqM:n,priceTotal:c,building:o,floor:d,rooms:p}=(0,l.I)(t);return new _.Z({url:`/item/${e}`,html:`\n          <div class="card-table__col card-table__col--scu">${a}</div>\n          <div class="card-table__col card-table__col--complex">ЖК ${i}</div>\n          <div class="card-table__col card-table__col--building">${o}</div>\n          <div class="card-table__col card-table__col--floor">${d}</div>\n          <div class="card-table__col card-table__col--rooms">${p}</div>\n          <div class="card-table__col card-table__col--square">${s} м<sup>2</sup></div>\n          <div class="card-table__col card-table__col--priceSqM">${(0,r.X)(n)} ₸</div>\n          <div class="card-table__col card-table__col--priceTotal">${(0,r.X)(c)} ₸</div>\n          <div class="card-table__col card-table__col--favorite">\n            <span class="card-table__favorite" data-el="favorite" tabindex="0">\n              <svg width="24" height="24"><use xlink:href="#icon-heart"></use></svg>\n            </span>\n          </div>\n        `,attributes:{class:"card-table__row card-table__card"}}).component}))}_toggle(t){"asc"===n.Z.getState("directions")[t]?(this._elements[t].classList.remove("card-table__toggle--asc"),this._elements[t].classList.add("card-table__toggle--desc")):(this._elements[t].classList.remove("card-table__toggle--desc"),this._elements[t].classList.add("card-table__toggle--asc"))}_initListeners(){const{complex:t,rooms:e,square:a,priceSqM:i,priceTotal:s}=this._elements,l=n.Z.getState("products"),r=n.Z.getState("directions"),_=t=>r[t]="asc"===r[t]?"desc":"asc";t.addEventListener("click",(()=>{_("complex"),l.sort(((t,e)=>"asc"===r.complex?(0,o.rR)(t.complex_name,e.complex_name):(0,o.rR)(e.complex_name,t.complex_name))),n.Z.dispatch((0,c.kI)(l))})),e.addEventListener("click",(()=>{_("rooms"),l.sort(((t,e)=>"asc"===r.rooms?(0,o.qu)(t.rooms,e.rooms):(0,o.qu)(e.rooms,t.rooms))),n.Z.dispatch((0,c.kI)(l))})),a.addEventListener("click",(()=>{_("square"),l.sort(((t,e)=>"asc"===r.square?(0,o.qu)(t.square,e.square):(0,o.qu)(e.square,t.square))),n.Z.dispatch((0,c.kI)(l))})),i.addEventListener("click",(()=>{_("priceSqM"),l.sort(((t,e)=>"asc"===r.priceSqM?(0,o.qu)(t.price_sq_m,e.price_sq_m):(0,o.qu)(e.price_sq_m,t.price_sq_m))),n.Z.dispatch((0,c.kI)(l))})),s.addEventListener("click",(()=>{_("priceTotal"),l.sort(((t,e)=>"asc"===r.priceTotal?(0,o.qu)(t.price_total,e.price_total):(0,o.qu)(e.price_total,t.price_total))),n.Z.dispatch((0,c.kI)(l))}))}}i()}catch(t){i(t)}}))},289:(t,e,a)=>{a.d(e,{Z:()=>i});class i{_baseUrl="https://jsproject.webcademy.ru";_url={};constructor(t=""){this._url=new URL(t,this._baseUrl)}toString(){return this._url.toString()}addComplex(t){return"all"!==t.value?this._url.searchParams.set(t.name,t.value):this._url.searchParams.delete(t.name),this}addRoom(t){const e=t.querySelectorAll('[name="rooms[]"]');return this._toggleQueries(e),this}addSquare(t,e){return t=t.querySelector('[name="sqmin"]'),e=e.querySelector('[name="sqmax"]'),this._toggleQuery(t),this._toggleQuery(e),this}addPrice(t,e){return t=t.querySelector('[name="pricemin"]'),e=e.querySelector('[name="pricemax"]'),this._toggleQuery(t),this._toggleQuery(e),this}_toggleQueries(t){const e=t[0].name.replace("[]",""),a=Array.from(t).filter((t=>t.checked));if(this._url.searchParams.delete(e),a.length){const t=a.map((t=>t.value));this._url.searchParams.set(e,t.join(","))}}_toggleQuery(t){this._url.searchParams.delete(t.name),""!==t.value&&this._url.searchParams.set(t.name,t.value)}}},907:(t,e,a)=>{a.a(t,(async(t,i)=>{try{a.d(e,{Z:()=>b});var s=a(771),n=a(402),l=a(42),r=a(319),c=a(715),o=a(289),_=a(531),d=a(338),p=t([r,c]);[r,c]=p.then?(await p)():p;const{loadInfo:u}=n.default,{loadFilterProducts:m}=l.default;class b extends s.Z{_data={};_query={};constructor(){super(),this._init()}async _afterInit(){await this._loadData(),await this._updateData()}async _loadData(){this._query=new o.Z("items"),this._data.info=await u(),this._data.products=r.Z.getState("products")}async _updateData(){const{info:t,products:e}=this._data,{complexNames:a,roomValues:i,priceMin:s,priceMax:n,squareMin:l,squareMax:r}=t;this.update({place:this._place(a),room:this._room(i),sqMin:this._area({squareMin:l,squareMax:r},"sqmin"),sqMax:this._area({squareMin:l,squareMax:r},"sqmax","до"),priceMin:this._price({priceMin:s,priceMax:n},"pricemin"),priceMax:this._price({priceMin:s,priceMax:n},"pricemax","до"),submit:this._submit(e.length)})}get _template(){return'\n      <section class="main-filter">\n        <div class="container">\n          <h2 class="main-filter__title title">Выбор квартир:</h2>\n\n          <form class="main-filter__form" method="get" data-el="form">\n            <div class="main-filter__items">\n              <div class="main-filter__item">\n                <h3 class="main-filter__label">Выбор проекта:</h3>\n                <select class="main-filter__select" name="complex" data-el="place">\n                  <option value="all">Все проекты</option>\n                  <option value="Генеральский">ЖК Генеральский</option>\n                  <option value="Речной">ЖК Речной</option>\n                  <option value="Лесной">ЖК Лесной</option>\n                  <option value="Квантум">ЖК Квантум</option>\n                </select>\n              </div>\n\n              <div class="main-filter__item">\n                <h3 class="main-filter__label">Комнат:</h3>\n                <ul class="main-filter__checkboxes" data-el="room">\n                  <li class="main-filter__checkbox-item">\n                    <input id="room_1" class="sr-only" type="checkbox" name="rooms[]" value="1">\n                    <label for="room_1" class="main-filter__checkbox">1</label>\n                  </li>\n                  <li class="main-filter__checkbox-item">\n                    <input id="room_2" class="sr-only" type="checkbox" name="rooms[]" value="2">\n                    <label for="room_2" class="main-filter__checkbox">2</label>\n                  </li>\n                  <li class="main-filter__checkbox-item">\n                    <input id="room_3" class="sr-only" type="checkbox" name="rooms[]" value="3">\n                    <label for="room_3" class="main-filter__checkbox">3</label>\n                  </li>\n                  <li class="main-filter__checkbox-item">\n                    <input id="room_4" class="sr-only" type="checkbox" name="rooms[]" value="4">\n                    <label for="room_4" class="main-filter__checkbox">4</label>\n                  </li>\n                  <li class="main-filter__checkbox-item">\n                    <input id="room_5" class="sr-only" type="checkbox" name="rooms[]" value="5">\n                    <label for="room_5" class="main-filter__checkbox">5</label>\n                  </li>\n                </ul>\n              </div>\n\n              <div class="main-filter__item">\n                <h3 class="main-filter__label">Площадь:</h3>\n                <ul class="main-filter__inputs">\n                  <li class="main-filter__input-item" data-el="sqMin">\n                    <label class="main-filter__input-wrap">\n                      <span class="main-filter__input-title">от</span>\n                      <input class="main-filter__input" type="number" name="sqmin" min="38" max="120" placeholder="38">\n                      <span class="main-filter__input-title main-filter__input-title--accent">м²</span>\n                    </label>\n                  </li>\n                  <li class="main-filter__input-item" data-el="sqMax">\n                    <label class="main-filter__input-wrap">\n                      <span class="main-filter__input-title">до</span>\n                      <input class="main-filter__input" type="number" name="sqmax" min="38" max="120" placeholder="120">\n                      <span class="main-filter__input-title main-filter__input-title--accent">м²</span>\n                    </label>\n                  </li>\n                </ul>\n              </div>\n\n              <div class="main-filter__item">\n                <h3 class="main-filter__label">Стоимость:</h3>\n                <ul class="main-filter__inputs">\n                  <li class="main-filter__input-item" data-el="priceMin">\n                    <label class="main-filter__input-wrap">\n                      <span class="main-filter__input-title">от</span>\n                      <input class="main-filter__input main-filter__input--large" type="number" name="pricemin" min="2325000" max="4525000" placeholder="2325000">\n                      <span class="main-filter__input-title main-filter__input-title--accent">₸</span>\n                    </label>\n                  </li>\n                  <li class="main-filter__input-item" data-el="priceMax">\n                    <label class="main-filter__input-wrap">\n                      <span class="main-filter__input-title">до</span>\n                      <input class="main-filter__input main-filter__input--large" type="number" name="pricemax" min="2325000" max="4525000" placeholder="4525000">\n                      <span class="main-filter__input-title main-filter__input-title--accent">₸</span>\n                    </label>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            <div class="main-filter__buttons">\n              <button class="main-filter__submit" type="submit" data-el="submit">Показать все объекты</button>\n              <button class="main-filter__reset" type="reset">Сбросить фильтр</button>\n            </div>\n          </form>\n        </div>\n      </section>\n    '}_place(t=[]){if(!Array.isArray(t))return"";let e='<option value="all">Все проекты</option>';return t.forEach((t=>{e+=`<option value="${t}">ЖК ${t}</option>`})),e}_room(t=[]){if(!Array.isArray(t))return"";let e="";return t.forEach((t=>{e+=`\n        <li class="main-filter__checkbox-item">\n          <input id="room_${t}" class="sr-only" type="checkbox" name="rooms[]" value="${t}">\n          <label for="room_${t}" class="main-filter__checkbox">${t}</label>\n        </li>\n      `})),e}_area({squareMin:t,squareMax:e},a,i="от"){return`\n      <label class="main-filter__input-wrap">\n        <span class="main-filter__input-title">${i}</span>\n        <input class="main-filter__input" type="number" name="${a}" min="${t}" max="${e}" placeholder="${"от"===i?t:e}">\n        <span class="main-filter__input-title main-filter__input-title--accent">м²</span>\n      </label>\n    `}_price({priceMin:t,priceMax:e},a,i="от"){return`\n      <label class="main-filter__input-wrap">\n        <span class="main-filter__input-title">${i}</span>\n        <input class="main-filter__input main-filter__input--large" type="number" name="${a}" min="${t}" max="${e}" placeholder="${"от"===i?t:e}">\n        <span class="main-filter__input-title main-filter__input-title--accent">₸</span>\n      </label>\n    `}_submit(t,e){return this.elements.submit.disabled=!1,t<1?(this.elements.submit.disabled=!0,"Нет таких объектов"):e?e(t):`Показать ${t} ${(0,_.A)(t,["объект","объекта","объектов"])}`}_initListeners(){const{form:t,place:e,room:a,sqMin:i,sqMax:s,priceMin:n,priceMax:l}=this.elements;t.addEventListener("change",(0,d.Ds)((async t=>{t.preventDefault(),this._query.addComplex(e),this._query.addRoom(a),this._query.addSquare(i,s),this._query.addPrice(n,l),this._data.products=await m(this._query),this.update({submit:this._submit(this._data.products.length)})})),{signal:this._abortController.signal}),t.addEventListener("submit",(async t=>{t.preventDefault(),r.Z.dispatch((0,c.MN)(this._data.products))}),{signal:this._abortController.signal}),t.addEventListener("reset",(async()=>{r.Z.dispatch((0,c.sx)()),await this._afterInit()}),{signal:this._abortController.signal})}}i()}catch(t){i(t)}}))},71:(t,e,a)=>{a.a(t,(async(t,i)=>{try{a.d(e,{Z:()=>u});var s=a(771),n=a(319),l=a(715),r=a(828),c=a(399),o=a(338),_=a(838),d=t([n,l,r,c]);[n,l,r,c]=d.then?(await d)():d;const p={productList:r.Z.bind(null,n.Z.getState("products"))};class u extends s.Z{_type=r.Z;constructor(){super(),this._setComponents(p),this._init()}async _afterInit(){await this._loadData(),await this._updateData()}async _loadData(){n.Z.subscribe(l.dj,(()=>{p.productList=this._type.bind(null,n.Z.getState("products")),this._reloadComponents(p)})),n.Z.subscribe(l.Xm,(()=>{p.productList=this._type.bind(null,n.Z.getState("products")),this._reloadComponents(p)})),n.Z.subscribe(l.dq,(()=>{p.productList=this._type.bind(null,n.Z.getState("products")),this._reloadComponents(p)})),n.Z.subscribe(_.xe,(()=>{p.productList=this._type.bind(null,n.Z.getState("products")),this._reloadComponents(p)}))}async _updateData(){}get _template(){return'\n      <section class="main-listing">\n        <div class="container">\n          <h2 class="sr-only">Список объектов</h2>\n\n          <div class="main-listing__state">\n            <div class="main-listing__state-left" data-el="sort">\n              <label for="sortBy" class="main-listing__sort-label">Сортировать</label>\n              <select id="sortBy" class="main-listing__sort" name="sortBy" data-el="sortBy">\n                <option value="priceASC">по цене ↑</option>\n                <option value="priceDESC">по цене ↓</option>\n                <option value="squareASC">по площади ↑</option>\n                <option value="squareDESC">по площади ↓</option>\n              </select>\n            </div>\n            <div class="main-listing__state-right">\n              <ul class="main-listing__view">\n                <li class="main-listing__view-item">\n                  <input id="cardList" class="sr-only" type="radio" name="viewType" value="cardList" checked>\n                  <label for="cardList" class="main-listing__view-toggle" aria-label="Отображать карточки товара в виде плиток" title="Плитки" data-el="toggleList" tabindex="0">\n                    <svg width="22" height="22"><use xlink:href="#icon-card-list"></use></svg>\n                  </label>\n                </li>\n                <li class="main-listing__view-item">\n                  <input id="cardTable" class="sr-only" type="radio" name="viewType" value="cardTable">\n                  <label for="cardTable" class="main-listing__view-toggle" aria-label="Отображать карточки товара в виде таблицы" title="Таблица" data-el="toggleTable" tabindex="0">\n                    <svg width="22" height="22"><use xlink:href="#icon-card-table"></use></svg>\n                  </label>\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          <div class="main-listing__content">\n            <div data-el="productList">\x3c!-- CardListComponent || CardTableComponent --\x3e</div>\n          </div>\n        </div>\n      </section>\n    '}_initListeners(){this._elements.toggleList.addEventListener("click",(()=>{this._elements.toggleList.dataset.checked||(p.productList=r.Z.bind(null,n.Z.getState("products")),this._reloadComponents(p)),this._type=r.Z,this._elements.toggleList.dataset.checked="true",this._elements.toggleTable.removeAttribute("data-checked"),this._elements.sort.removeAttribute("style")})),this._elements.toggleTable.addEventListener("click",(()=>{this._elements.toggleTable.dataset.checked||(p.productList=c.Z,this._reloadComponents(p)),this._type=c.Z,this._elements.toggleList.removeAttribute("data-checked"),this._elements.toggleTable.dataset.checked="true",this._elements.sort.style.opacity="0"})),this._elements.sortBy.addEventListener("click",(t=>{const e=t.currentTarget.value,a=n.Z.getState("products");/price/.test(e)?a.sort(((t,a)=>"priceASC"===e?(0,o.qu)(t.price_total,a.price_total):(0,o.qu)(a.price_total,t.price_total))):/square/.test(e)&&a.sort(((t,a)=>"squareASC"===e?(0,o.qu)(t.square,a.square):(0,o.qu)(a.square,t.square))),n.Z.dispatch((0,l.U3)(a))}))}}i()}catch(t){i(t)}}))},750:(t,e,a)=>{a.a(t,(async(t,i)=>{try{a.r(e),a.d(e,{default:()=>o});var s=a(44),n=a(907),l=a(71),r=t([n,l]);[n,l]=r.then?(await r)():r;const c={filter:new n.Z,listing:new l.Z};class o extends s.Z{constructor(){super(),document.title=`Главная страница - ${this._title}`,this._setComponents(c),this._init()}get _template(){return'\n      <div class="home-page">\n        <div data-el="filter">\x3c!-- FilterComponent --\x3e</div>\n        <div data-el="listing">\x3c!-- ListingComponent --\x3e</div>\n      </div>\n    '}_initListeners(){}}i()}catch(t){i(t)}}))},402:(t,e,a)=>{a.d(e,{default:()=>s});const i=a(141).Z.create({baseUrl:"https://jsproject.webcademy.ru",credentials:"omit",headers:{"Content-Type":"application/x-www-form-urlencoded"}}),s={loadInfo:()=>i.get("/itemsinfo")}},338:(t,e,a)=>{a.d(e,{Ds:()=>i,qu:()=>s,rR:()=>n});const i=(t,e=300)=>{let a;return(...i)=>{a&&clearTimeout(a),a=setTimeout((()=>{t.apply(void 0,i)}),e)}},s=(t,e)=>t-e,n=(t,e)=>t.localeCompare(e)},531:(t,e,a)=>{a.d(e,{A:()=>i,I:()=>s});const i=(t,e)=>e[(t=Math.abs(t))%100>4&&t%100<20?2:[2,0,1,1,1,2][t%10<5?t%10:5]],s=t=>{const e={};for(const a in t)if(t.hasOwnProperty(a)){e[a.replace(/_(\w)/g,((t,e)=>e.toUpperCase()))]=t[a]}return e}}}]);